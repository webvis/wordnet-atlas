{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../BaseLayersCtrl.svelte",
    "../../FloorLayersCtrl.svelte",
    "../../InfoBox.svelte",
    "../../InfoBoxHeader.svelte",
    "../../Mark.svelte",
    "../../Marker.svelte",
    "../../OmniBox.svelte",
    "../../Placemark.svelte",
    "../../ResultsBox.svelte",
    "../../View.svelte",
    "../../App.svelte",
    "../../Bubble.svelte",
    "../../BubbleLabel.svelte",
    "../../Info.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { layers, selectLayer, selected_id } from './stores.js'\n\n\tfunction handleClick(layer) {\n\t\tselectLayer(layer.name)\n\t}\n</script>\n\n<style>\n\t.base_layers_ctrl {\n\t\tbottom: 0;\n\t\tposition: fixed;\n    \tmargin: 20px;\n\t}\n\t.layer_btn {\n\t\tdisplay: inline-block;\n\t\tbox-sizing: border-box;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t\tmargin-right: 12px;\n\t\tbox-shadow: var(--float-box-shadow);\n\t\tborder-radius: var(--float-border-radius);\n\t\tbackground: white;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t}\n\t.layer_btn > * {\n\t\tposition: absolute;\n\t\twidth: 60px;\n\t\tbottom: 8px;\n\t\tfont-size: 10px;\n\t\ttext-transform: uppercase;\n\t}\n\t.visible {\n\t\tfont-weight: bold;\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.base_layers_ctrl.isIdSelected {\n\t\t\tbottom: var(--infobox-header-height);\n\t\t}\n\t}\n</style>\n\n{#if $layers}\n<div class=\"base_layers_ctrl\" class:isIdSelected={$selected_id != ''}>\n\t{#each Array.from($layers.values()).filter(d => d.type == 'base') as layer}\n\t\t<div class=\"layer_btn\" on:click=\"{() => handleClick(layer)}\" class:visible=\"{layer.visible}\"><div>{layer.name}</div></div>\n\t{/each}\n</div>\n{/if}",
    "<script>\n\timport { layers, current_layer, selectLayer, selected_id } from './stores.js'\n\n\tfunction handleClick(layer) {\n        selectLayer(layer.name)\n\t}\n</script>\n\n<style>\n\t.floor_layers_ctrl {\n\t\tbottom: 0;\n        right: 0;\n\t\tposition: fixed;\n        box-shadow: var(--float-box-shadow);\n\t\tborder-radius: var(--float-border-radius);\n\t\tbackground: white;\n    \tmargin: 20px;\n        overflow: hidden;\n\t}\n\t.layer_btn {\n        position: relative;\n\t\tdisplay: block;\n\t\tbox-sizing: border-box;\n\t\twidth: 48px;\n\t\theight: 48px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t}\n\t.layer_btn > * {\n\t\tposition: absolute;\n\t\twidth: 48px;\n\t\tbottom: 16px;\n\t\tfont-size: 16px;\n\t\ttext-transform: uppercase;\n\t}\n    .visible {\n        font-weight: bold;\n    }\n\t.current {\n        background: var(--primary-bg-color);\n        color: var(--primary-fg-color);\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.floor_layers_ctrl.isIdSelected {\n\t\t\tbottom: var(--infobox-header-height);\n\t\t}\n\t}\n</style>\n\n{#if $layers}\n<div class=\"floor_layers_ctrl\" class:isIdSelected={$selected_id != ''}>\n\t{#each Array.from($layers.values()).filter(d => d.type == 'floor').reverse() as layer}\n\t\t<div class=\"layer_btn\" on:click=\"{() => handleClick(layer)}\" class:visible=\"{layer.visible}\" class:current=\"{layer == $current_layer}\"><div>{layer.name}</div></div>\n\t{/each}\n</div>\n{/if}",
    "<script>\n\timport { selected_id, selection } from './stores.js'\n\n\timport Card from '@smui/card'\n\timport LinearProgress from '@smui/linear-progress'\n</script>\n\n<style>\n\t.infobox {\n\t\tposition: relative;\n    \tmargin: 10px;\n\t\tbox-sizing: border-box;\n\t\tpointer-events: auto;\n\t}\n\n\t:global(.infobox table) {\n        border-spacing: 0;\n    }\n\n    :global(.infobox td:first-child) {\n        width: 80px;\n        font-weight: bold;\n    }\n\n    :global(.infobox tr:not(:last-child) > td) {\n        padding-bottom: 6px;\n    }\n\n\t@media only screen and (max-width: 600px) {\n\t\t.infobox {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\tmargin: 0 !important;\n\t\t\ttop: calc(100% - var(--infobox-header-height));\n\t\t}\n\t}\n\n</style>\n\n{#if $selected_id}\n\t<div class=\"infobox\">\n\t\t<Card class=\"mdc-elevation--z4\" style=\"overflow: hidden;\">\n\t\t\t{#if $selection}\n\t\t\t\t<slot></slot>\n\t\t\t{:else}\n\t\t\t\t<LinearProgress indeterminate/>\n\t\t\t{/if}\n\t\t</Card>\n\t</div>\n{/if}",
    "<script>\n    import { clearSelection } from './stores.js'\n\n    import { Content, Actions, ActionIcons } from '@smui/card'\n    import IconButton from '@smui/icon-button'\n\n    export let title = 'Title'\n    export let subtitle = ''\n</script>\n\n<style>\n    h2, h3 {\n        margin: 0;\n        font-weight: normal;\n    }\n</style>\n\n<div style=\"position: absolute; top: 2px; right: -4px;\">\n    <Actions>\n        <ActionIcons>\n            <IconButton class=\"material-icons\" on:click={clearSelection} style=\"color: var(--primary-fg-color);\" title=\"Close\">close</IconButton>\n        </ActionIcons>\n    </Actions>\n</div>\n<Content style=\"background: var(--primary-bg-color); color: var(--primary-fg-color);\">\n    <h2 class=\"mdc-typography--headline6\">{title}</h2>\n    <h3 class=\"mdc-typography--subtitle2\">{subtitle}</h3>\n</Content>",
    "<script>\n    export let fg = 'white'\n    export let bg = '#7b5b5b'\n    export let icon = null\n    export let text = null\n    export let shape = 'circle'\n</script>\n\n<style>\n.label {\n    font-size: 80px;\n    font-weight: bold;\n}\n</style>\n\n<g class=\"mark\">\n    {#if shape == 'circle'}\n        <circle r=\"62\" fill=\"#777\" stroke=\"#777\" stroke-width=\"5\" cy=\"5\"/>\n        <circle r=\"62\" fill={bg} stroke={fg} stroke-width=\"7.5\"/>\n    {:else if shape == 'square'}\n        <rect width=\"124\" height=\"124\" x=\"-62\" y=\"-57\" rx=\"16\" ry=\"16\" fill=\"#777\" stroke=\"#777\" stroke-width=\"5\"/>\n        <rect width=\"124\" height=\"124\" x=\"-62\" y=\"-62\" rx=\"16\" ry=\"16\" fill={bg} stroke={fg} stroke-width=\"7.5\"/>\n    {/if}\n\n    {#if text}\n        <text class=\"label\" fill={fg} text-anchor=\"middle\" dy=\".4em\">{text}</text>\n    {:else if icon}\n        <text class=\"material-icons\" fill={fg} transform=\"scale(3.5)\" text-anchor=\"middle\" dy=\".5em\">{icon}</text>\n    {/if}\n</g>",
    "<script>\n    import { current_layer, current_transform, semantic_zoom } from './stores.js'\n\n    export let position\n\n    $: lod_range = 'lodrange' in position ? position.lodrange.map(d => d == 'Infinity' ? Infinity : d) : [0, Infinity]\n    $: lod_visible = $current_transform.k >= lod_range[0] && $current_transform.k <= lod_range[1]\n</script>\n\n<style>\n\n\n@media only screen and (max-width: 600px) {\n    .marker_content {\n        transform: scale(2);\n    }\n}\n</style>\n\n{#if position.layers.has($current_layer.name) && lod_visible}\n<g class=\"selectable marker\" transform=\"translate({position.x},{position.y}) scale({$semantic_zoom})\" on:click>\n    <g class=\"marker_content\">\n        <slot></slot>\n    </g>\n</g>\n{/if}",
    "<script>\n\timport { createEventDispatcher } from 'svelte'\n\timport { results, clearSelection } from './stores.js'\n\n\timport Paper from '@smui/paper'\n\timport IconButton from '@smui/icon-button'\n\n\tlet query\n\t\n\tconst dispatch = createEventDispatcher()\n\n\tfunction search(){\n\t\tclearSelection()\n\t\tdispatch('search', {\n\t\t\tquery: query\n\t\t})\n\t}\n\tfunction handleClick(){\n\t\tsearch()\n\t}\n\tfunction handleInput(){\n\t\tsearch()\n\t}\n</script>\n\n<style>\n\t.omnibox {\n\t\tposition: relative;\n\t\tmargin: var(--omnibox-margin);\n\t\tbox-sizing: border-box;\n\t\tpointer-events: auto;\n\t}\n\t.wrapper {\n\t\tdisplay: flex;\n\t\tpadding: 4px;\n\t}\n    input {\n        border: none;\n        outline: none;\n        background: none;\n\t\tmargin: 0;\n\t\tmargin-left: 8px;\n        margin-right: 12px;\n        flex-grow: 1;\n    }\n\t.results {\n\t\tflex-grow: 1;\n\t\toverflow-y: auto;\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.omnibox {\n\t\t\twidth: calc(100% - 2*var(--omnibox-margin));\n\t\t\ttop: 0;\n\t\t}\n\t\t.fullscreen.omnibox {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin: 0;\n\t\t}\n\t\t.fullscreen.omnibox .wrapper {\n\t\t\tpadding: 14px;\n\t\t}\n\t\t.fullscreen.omnibox :global(.smui-paper) {\n\t\t\tborder-radius: 0;\n\t\t}\n\t}\n\n</style>\n\n<div class=\"omnibox\" class:fullscreen={ $results.length > 0 }>\n\t<Paper elevation=\"4\" style=\"padding: 0; display: flex; flex-direction: column; height: 100%;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<input type=\"text\" bind:value={query} placeholder=\"Search\" on:input={handleInput}/>\n\t\t\t<IconButton style=\"margin: 0;\" class=\"material-icons\" on:click={handleClick}>search</IconButton>\n\t\t</div>\n\t\t{#if $results.length > 0}\n\t\t\t<hr/>\n\t\t\t<div class=\"results\">\n\t\t\t\t<slot>\n\t\t\t\t</slot>\n\t\t\t</div>\n\t\t{/if}\n\t</Paper>\n</div>",
    "<script>\n    import { selection, semantic_zoom } from './stores.js'\n    \n    export let icon\n    export let scale = 1\n</script>\n\n<style>\n.placemark {\n    /*pointer-events: none;*/\n}\n.arrow {\n    fill: var(--primary-bg-color);\n    stroke: rgba(0,0,0,0.3);\n    stroke-width: 10px;\n}\n.circle {\n    fill: var(--primary-fg-color);\n}\n.arrow, .circle, text {\n    transform: scale(0.75);\n}\ntext {\n    font-size: 160px;\n    text-anchor: middle;\n}\n\n@media only screen and (max-width: 600px) {\n    .arrow, .circle, text {\n        transform: scale(1.5);\n    }\n}\n</style>\n\n{#if $selection && $selection.position}\n<g class=\"placemark\" transform=\"translate({$selection.position.x} {$selection.position.y}) scale({$semantic_zoom}) scale({scale})\">\n    <path class=\"arrow\" d=\"M -5.3702482,-2.4743486 C -10.242286,-6.9402679 -49.955599,-76.685953 -76.604136,-127.57734 c -46.734054,-89.24931 -70.983044,-152.78 -70.949634,-185.88301 0.0573,-54.08193 31.17406,-105.24462 79.068234,-129.9943 22.718226,-11.73981 42.684617,-16.63934 68.03569057,-16.69515 25.97047543,-0.0574 45.83270943,4.7527 68.93380743,16.69303 47.900068,24.75844 79.015178,75.91384 79.069808,129.99642 0.0289,33.02505 -24.36515,97.00116 -70.832446,185.73178 C 50.041984,-76.783702 10.273172,-6.9725157 5.3687427,-2.4743486 3.6921601,-0.93661741 1.6598472,0 3.6115871e-5,0 -1.659415,0 -3.6930899,-0.9370493 -5.3702482,-2.4743486 Z\"/>\n    <path class=\"circle\" d=\"m 107.93742,-315.29401 a 107.93743,107.93743 0 1 1 -215.87485,0 107.93743,107.93743 0 1 1 215.87485,0 z\"/>\n    {#if icon}\n        <text class=\"material-icons\" y=\"-240\">{icon}</text>\n    {/if}\n</g>\n{/if}",
    "<script>\n    import { results } from './stores.js'\n</script>\n\n<style>\n\t.box {\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.box {\n\t\t\t\n\t\t}\n\t}\n\n</style>\n\n{#if $results}\n\t<div class=\"box\">\n\t\t<slot></slot>\n\t</div>\n{/if}",
    "<script>\n\timport * as d3 from 'd3'\n\n\timport { current_transform, viewBoxRect, viewport, layers, current_layer, selection } from './stores.js'\n\timport { onMount } from 'svelte'\n\n\timport Placemark from './Placemark.svelte'\n\n\texport let viewBox\n\t\n\tlet svg\n\tlet zoom_behavior\n\tlet current = false\n\t\n\tonMount(() => {\n\t\t// store viewBox rect in a global store\n\t\t$viewBoxRect = svg.viewBox.baseVal\n\n\t\t// auto populate layers store from defined Layer components\n\t\t$layers = new Map()\n\t\tlet first_done = false\n\t\tsvg.querySelectorAll('.layer').forEach(layer => {\n\t\t\tlet key = layer.getAttribute('data:name')\n\t\t\tlet type = layer.getAttribute('data:type')\n\t\t\tlet visible = false\n\n\t\t\t// first base or floor layer visible and current by default\n\t\t\tif (!first_done && (type == 'base' || type == 'floor')) {\n\t\t\t\tvisible = true\n\t\t\t\tfirst_done = true\n\t\t\t\tcurrent = true\n\t\t\t}\n\n\t\t\t// overlays are visible by default\n\t\t\tif (type == 'overlay') {\n\t\t\t\tvisible = true\n\t\t\t}\n\n\t\t\tlet d = {\n\t\t\t\tname: key,\n\t\t\t\ttype: type,\n\t\t\t\tvisible: visible\n\t\t\t}\n\t\t\t\n\t\t\t$layers.set(key, d)\n\n\t\t\tif (current) {\n\t\t\t\t$current_layer = d\n\t\t\t\tcurrent = false\n\t\t\t}\n\t\t})\n\n\t\t// enable d3 zoom\n\t\tzoom_behavior = d3.zoom()\n\t\t\t.scaleExtent([0, Infinity])\n\t\t\t.on('zoom', handleZoom)\n\n\t\td3.select(svg).call(zoom_behavior)\n\n\t\tfunction handleZoom() {\n\t\t\t$current_transform = d3.event.transform\n\t\t\tupdateViewport()\n\t\t\tupdateLODElementsInSVG()\n\t\t}\n\n\t\t// focus to enable keyboard interaction\n\t\tsvg.focus()\n\n\t\t// update LOD-sensitive elements that are defined inside the SVG\n\t\tfunction updateLODElementsInSVG() {\n\t\t\tsvg.querySelectorAll('[data-lodrange]').forEach(elem => {\n\t\t\t\tlet lod_range = JSON.parse(elem.getAttribute('data-lodrange')).map(d => d == 'Infinity' ? Infinity : d)\n\t\t\t\tlet lod_visible = $current_transform.k >= lod_range[0] && $current_transform.k <= lod_range[1]\n\t\t\t\telem.setAttribute('visibility', lod_visible ? 'visible' : 'hidden')\n\t\t\t})\n\t\t}\n\n\t\tupdateViewport()\n\t\tupdateLODElementsInSVG()\n\n\t\twindow.addEventListener('resize', function(event) {\n\t\t\tupdateViewport()\n\t\t}, true)\n\t})\n\n\tfunction updateViewport() {\n\t\tlet bcrect = svg.getBoundingClientRect()\n\t\tlet ctm = svg.getCTM()\n\n\t\t$viewport = new DOMRect(\n\t\t\t(-ctm.e/ctm.a-$current_transform.x)/$current_transform.k,\n\t\t\t(-ctm.f/ctm.d-$current_transform.y)/$current_transform.k,\n\t\t\tbcrect.width/ctm.a/$current_transform.k,\n\t\t\tbcrect.height/ctm.d/$current_transform.k\n\t\t)\n\t}\n\n\tfunction scaleBy(k, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.scaleBy(d3.select(svg).transition().duration(duration), k)\n\t}\n\n\tfunction scaleTo(k, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.scaleTo(d3.select(svg).transition().duration(duration), k)\n\t}\n\n\tfunction translateBy(x, y, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.translateBy(d3.select(svg).transition().duration(duration), x, y)\n\t}\n\n\tfunction translateTo(p, duration) {\n\t\tduration = duration === undefined ? 1200 : duration\n\t\tzoom_behavior.translateTo(d3.select(svg).transition().duration(duration), p.x, p.y)\n\t}\n\n\t// listen to selection changes\n\tselection.subscribe(handleNewSelection)\n\n\tfunction handleNewSelection(d) {\n\t\tif(d && d.position) {\n\t\t\ttranslateTo(d.position)\n\t\t}\n\t}\n\n\tfunction handleKeyUp(e) {\n\t\tconst delta = 500 / $current_transform.k\n\n\t\t// pan and zoom keyboard control\n\t\tswitch(e.key) {\n\t\t\tcase 'ArrowRight':\n\t\t\t\ttranslateBy(-delta,0)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowLeft':\n\t\t\t\ttranslateBy(delta,0)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowUp':\n\t\t\t\ttranslateBy(0,delta)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowDown':\n\t\t\t\ttranslateBy(0,-delta)\n\t\t\t\tbreak\n\t\t\tcase '+':\n\t\t\t\tscaleBy(1.5)\n\t\t\t\tbreak\n\t\t\tcase '-':\n\t\t\t\tscaleBy(0.66)\n\t\t\t\tbreak\n\t\t}\n\t}\n</script>\n\n<style>\n\t.view {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: fixed; /* needed to avoid jumping whenever the hash is changed */\n\t}\n\t.view:focus {\n\t\toutline: none;\n\t}\n</style>\n\n<svg class=\"view\" bind:this={svg} {viewBox} tabindex=\"0\" on:keyup={handleKeyUp}>\n\t<g transform={$current_transform}>\n\t\t<slot></slot>\n\t</g>\n</svg>",
    "<script>\n\timport * as d3 from 'd3'\n\timport { onMount } from 'svelte'\n\timport { View, Layer, InfoBox, OmniBox, FloorLayersCtrl, ResultsBox, InfoBoxHeader, selected_id, selection } from 'anymapper'\n\timport { treeify, pack } from './layout.js'\n\timport BubblePack from './BubblePack.svelte'\n\timport Info from './Info.svelte'\n\n\tlet nodes = []\n\tlet bubble_color\n\tlet node_index = new Map()\n\n\tonMount(async function() {\n\t\tlet data = await (await fetch('data/wnen30_core_n_longest.json')).json()\n\t\tlet tree = treeify(data)\n\t\tpack(tree, 1000, 1000)\n\n\t\tbubble_color = d3.scaleSequential([tree.height,0], d3.interpolateBlues)\n\n\t\tnodes = tree.descendants()\n\n\t\t// index nodes according to their path\n\t\tnodes.forEach(d => node_index.set(d.data.path, d))\n\n\t\t// add a \"position\" property to each node, to inform anymapper of their location\n\t\tnodes.forEach(d => d.position = {x: d.y, y: d.x})\n\t})\n\n\tfunction updateSelection(_) {\n\t\tif(node_index.has($selected_id))\n\t\t\t$selection = node_index.get($selected_id)\n\t\telse\n\t\t\t$selection = null\n\t}\n\tselected_id.subscribe(updateSelection)\n</script>\n\n<style>\n\t/* FIXME? global deafults? */\n\t:global(html), :global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t}\n\t.wrapper {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t\tposition: absolute;\n\t}\n\n\t:global(a), :global(a:hover), :global(a:visited) {\n\t\ttext-decoration: none;\n\t\tcolor: var(--primary-bg-color);\n\t}\n\t:global(a:hover) {\n\t\ttext-decoration: underline;\n\t}\n\n\t/* application-specific */\n\t\n\t/* define global CSS */\n\t:global(.infobox) {\n\t\twidth: 350px;\n\t}\n\t:global(.omnibox) {\n\t\twidth: 350px;\n\t}\n\t:global(.view) {\n\t\tbackground: white;\n\t}\n\n\t:global(.selectable) {\n\t\tcursor: pointer;\n\t}\n\t\n\tfooter {\n\t\tposition: fixed;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tfont-size: 10px;\n\t\tbackground: rgba(255,255,255,0.6);\n\t\tpadding: 2px;\n\t}\n\n\t:global(:root) {\n\t\t--infobox-header-height: 86px;\n\t\t--omnibox-margin: 10px;\n\t}\n</style>\n\n<div class=\"wrapper\">\n\n<View viewBox=\"0 0 1000 1000\">\n\t<BubblePack data={nodes} {bubble_color}/>\n</View>\n\n<OmniBox>\n\t<ResultsBox>\n\t\tHi\n\t</ResultsBox>\n</OmniBox>\n\n<InfoBox>\n\t<Info d={$selection}/>\n</InfoBox>\n\n<footer>Powered by <a href=\"https://github.com/webvis/anymapper\">anymapper</a>, by <a href=\"//hct.iit.cnr.it/\">Human Centered Technologies Lab</a> @<a href=\"//www.iit.cnr.it/\">IIT-CNR</a></footer>\n\n</div>\n",
    "<script>\n\timport { selection, select } from 'anymapper'\n    \n\texport let d\n    export let bubble_color\n</script>\n\n<style>\n\t.selected {\n\t\tstroke: black;\n\t\tstroke-width: 2px;\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n\n<g>\n    <circle\n        cx=\"{d.y}\"\n        cy=\"{d.x}\"\n        r=\"{d.r}\"\n        fill={bubble_color(d.height)}\n        on:click=\"{() => select(d.data.path) }\" class:selected=\"{$selection == d}\"\n    />\n</g>",
    "<script>\n    import { onMount } from 'svelte'\n\timport { selection, select } from 'anymapper'\n\texport let d\n\n    let label\n\n    $: sense_children = d.children.filter(x => x.data.original_node.type == 'sense')\n\n    onMount(async function() {\n\t\tlet bbox = label.getBBox()\n\t\tlet aspect = 1\n\t\tif(bbox.width > 0) {\n\t\t\taspect = bbox.height/bbox.width\n\t\t}\n\t\tlabel.setAttribute('transform', `translate(${d.y},${d.x}) scale(${aspect*d.r/10/sense_children.length})`)\n\t})\n</script>\n\n<style>\n    text {\n        text-anchor: middle;\n        text-transform: uppercase;\n        fill: white;\n        font-weight: bold;\n    }\n    .sense:hover, .selected {\n        fill: black;\n        cursor: pointer;\n        stroke: white;\n        stroke-width: 5px;\n        stroke-linejoin: round;\n        vector-effect: non-scaling-stroke;\n        paint-order: stroke;\n    }\n    .comma {\n        pointer-events: none;\n    }\n</style>\n\n<text bind:this={label} y=\"{-sense_children.length/2.0-0.2}em\">\n    {#each sense_children as sense_child, i}\n        <tspan\n            x=\"0\"\n            dy=\"1em\"\n            class=\"sense\"\n            on:click=\"{() => select(sense_child.data.path) }\"\n            class:selected=\"{$selection == sense_child}\"\n        >{ sense_child.data.original_node.lemma }\n        </tspan><tspan class=\"comma\">{i < sense_children.length-1 ? ',' : ''}</tspan>\n    {/each}\n</text>",
    "<script>\n\timport { Content } from '@smui/card'\n\n    export let d\n\n    $: type = d.data.original_node.type\n    $: synonyms = get_sense_siblings(d)\n\t$: hypernyms = get_parent_senses(d)\n\n    function get_synset_children(d) {\n        return d.data.children.filter(x => x.original_node.type == 'sense')\n    }\n    function get_synset_children_lemmas(d) {\n        return get_synset_children(d).map(x => x.original_node.lemma)\n    }\n    function get_sense_siblings(d) {\n\t\treturn get_synset_children(d.parent).filter(x => x.original_node.type == 'sense' && x.original_node.id != d.data.original_node.id)\n\t}\n    function get_parent_senses(d) {\n        return d.parent.parent ? d.parent.parent.data.children.filter(x => x.original_node.type == 'sense') : []\n    }\n    function expand_pos(pos) {\n        switch(pos) {\n            case 'n':\n                return 'noun'\n            case 'v':\n                return 'verb'\n            case 'a':\n                return 'adjective'\n            case 'r':\n                return 'adverb'\n        }\n    }\n</script>\n\n<style>\n    span {\n        font-family: serif;\n    }\n    .title {\n        font-weight: bold;\n    }\n    .pos {\n        text-transform: uppercase;\n        font-size: smaller;\n    }\n    .sensenum {\n        font-weight: bold;\n    }\n    .synonyms, .hypernyms {\n        font-style: italic;\n    }\n    .synonyms > :not(:last-child)::after, .hypernyms > :not(:last-child)::after {\n        content: ', '\n    }\n    .definition {\n        font-style: italic;\n    }\n</style>\n\n<Content>\n    <span class=\"title\">{type == 'synset' ? get_synset_children_lemmas(d).join(', ') : d.data.original_node.lemma}</span>\n    <span class=\"pos\">{expand_pos(d.data.original_node.pos)}</span>\n    <span class=\"sensenum\">{type == 'synset' ? '-' : d.data.original_node.sensenum+'.'}</span>\n    {#if type == 'sense'}\n        <span class=\"synonyms\">\n            {#each synonyms as synonym}<span><a href=\"#{ synonym.path }\">{ synonym.original_node.lemma }</a></span>{/each}{#if synonyms.length > 0}:{/if}</span>\n    {/if}\n    <span class=\"definition\">{type == 'synset' ? d.data.original_node.definition : d.parent.data.original_node.definition}.</span>\n    {#if type == 'sense'}\n        {#if hypernyms.length > 0}\n            <br><span>More generic: </span><span class=\"hypernyms\">\n                {#each hypernyms as hypernym}<span><a href=\"#{ hypernym.path }\">{ hypernym.original_node.lemma }</a></span>{/each}{#if hypernyms.length > 0}.{/if}</span>\n        {/if}\n    {/if}\n</Content>"
  ],
  "names": [],
  "mappings": "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"
}